#!/bin/bash
set -ex

# Haskell
stack exec ormolu -- --mode=check $(find src app test -name \*.hs) \
    || { echo HINT: Run '$ stack exec ormolu -- --mode=inplace $(find src app test -name \*.hs)'; false; }
stack exec hlint -- src app test

# C++
for f in $(find runtime/include examples/data -name \*.\?pp); do diff $f <(clang-format $f); done \
    || { echo HINT: Run '$ clang-format -i $(find runtime/include examples/data -name \*.\?pp);' ; false; }

# Python
isort --check-only --diff scripts/*.py examples/data/*.py \
    || { echo HINT: Run '$ isort scripts/*.py examples/data/*.py'; false; }
yapf --diff '--style={ COLUMN_LIMIT: 9999 }' scripts/*.py examples/data/*.py \
    || { echo HINT: Run 'yapf --in-place '--style={ COLUMN_LIMIT: 9999 }' scripts/*.py examples/data/*.py'; false; }
mypy scripts/*.py examples/data/*.py

# YAML
yarn prettier --check $(git ls-files | grep '\.yml$\|\.yaml$\|\.json$') \
    || { echo HINT: Run '$ yarn prettier --write $(git ls-files | grep '\.yml$\|\.yaml$\|\.json$')'; false; }

# Markdown
yarn prettier --check $(git ls-files | grep '\.md$') \
    || { echo HINT: Run '$ yarn prettier --write $(git ls-files | grep '\.md$')'; false; }
